'use strict';

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function(inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function() {
    inputString = inputString.split('\n');

    main();
});

function readLine() {
    return inputString[currentLine++];
}

/*
 * Complete the 'noPrefix' function below.
 *
 * The function accepts STRING_ARRAY words as parameter.
 */
function noPrefix(words) {
   let goodOrBad = "GOOD SET";

  for (let i = 0; i < words.length; i++) {
    // eslint-disable-next-line no-plusplus
    for (let j = 1; j < words.length; j++) {
      if (
        checkIsStrGratrOrLower(words[i], words[j]) &&
        checkConainsStr(words[i], words[j])
      ) {
        goodOrBad = "BAD SET\n" + words[j];
      } 
    }
  }
  console.log(goodOrBad);
}

function checkConainsStr(str, words) {
  let matchChar = 0;
  str.split('').forEach((char, index) => {
    return char === words[index] && ++matchChar || false;
  });
  return matchChar === str.length;
}
function checkIsStrGratrOrLower(str, word) {
  
  return str.length < word.length;
}

function main() {
    const n = parseInt(readLine().trim(), 10);

    let words = [];

    for (let i = 0; i < n; i++) {
        const wordsItem = readLine();
        words.push(wordsItem);
    }

    noPrefix(words);
}
